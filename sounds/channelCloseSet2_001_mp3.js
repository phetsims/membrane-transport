/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,//uwxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAIAAAWCQAgICAgICAgICAgICBAQEBAQEBAQEBAQEBgYGBgYGBgYGBgYGBggICAgICAgICAgICAoKCgoKCgoKCgoKCgoMDAwMDAwMDAwMDAwODg4ODg4ODg4ODg4OD///////////////8AAAA8TEFNRTMuMTAwAc0AAAAAAAAAABTAJARiQQAAwAAAFgkgmeaKjtBeAJEFBY7c5UAEAAAW23azb///8b3+Ka977/zv4pTLyaGr2fDAyZVjhDV7PuA81Ap/f/////O//inze/vvFNe937JpjV7PIrGRrNBUKc0zrjJxQTMCseahp9D1WpCFrY+AcgsCRC/DDVQt5L240DQUFWM5y4MpKxNyxpALwORShHCSG+IWONmJQPQhEisQxQTKct5xogNWY4+AcgsCJBtg31UQdC0QTg6G0t5c3JD1W2IYySp9Rxle5wGB5V+/vm99/FKZiaBYFBoLCgdD4MDgMAQB/8K5jQHGAAN/28DIwiOCHL/w4YlC5jYUZu4EgqDgv7qAwsBgMRBAEIB9YggRBMAUCgZeFwAQJAYAHyLvJw8BrIcAYHPgG3jgBtQSAZZDv9BE3cwAw0DhxAREIBw3DkwFxd/JwWWTQyBVGXImBlITAZ2GgNzwMMh0LSQMFBAAYOf81Pk4Qci5XK5gaAZaHgEiSBmMfgZhHIGIxSDiMBhILCyAoEf/keSZOFwuMJ0KiaZNgYcA4GAwYBgUGgYNAYWoAYDovx4AGCAGCgIBQI//8rkTMDQnzdzdRomfQLjAoHgDieaiC44Q1eIBhqwMjhdWIChbQXCJ+BvB////7////8UoIYDAoEAgHAwFAgDAQBANsSw6s6jKpeMoHYxPXzMyuMPCMGBU0UcjZaJMPEw4a6DGiUM5BQyyPTGAfMuqAwuAhAAjHBQAwiMOkAEgUxMXwgqGXAkYLEYsBDFQZMcCxLYw6EwEZjHoDOWTg4okjEI3MFiYwYDDYBYBoiEAoMQqE1gKR4WGbU+Z7Dpicbm5jUYyDBv/7ssRIgDPxmz25zgAD97/q97LwAQYkmIyAYsD5h8UAAPmNCsIAgYvCQkDCIDGCwiY6CZkMDmMBMYLDRiwCuGYGF7kEoRXOWsQFIfiorLXq2wcZZJpwhDBQbhBXMFB4xYEDCYfRsCwnSqTCQrR3lRgUAoHgILMWTKTEL6FZIMdkEkBxi8CGKgYgHDgY1xcCiScRfVNNL1BZlTgPAjql0IgJAY0FGGKxFy2ZAISAUIrWBw7BgGL0JkNWQliQhMJgdlylY6AWkzjAKNvmzsagoiGQGBUISiL8g0CiwgAABTXWlLwQAC1ylrT9unPQp3JY8T2qnjsibmq3VFq3VoYu1x86z1wtsz1vLk2KF5rYc95WnRhyqJKp5L3/9H/+GAO95cQQIcqqSnrABSKLoKFG0Qu+hMJtBtYmxM1MKpmSGZ5imoBeAURhnAgcIUEAoywEJyCQkNAjFsNaN1IzDQKUZxLAH2Q4VpiBlCnEkFjGQHSXUT1SxEFVsK+u4sVTHIsNKc2qsv2+ArHzYpjnlN47Caxk6fqCiwnkOWBLG7hJXMeE7im8xoVDkT0OyiiluRQmRdWVZbH5pK/cPJzPlawp1lvI9fqHT6Jq1qwsx1S43fLLadSq1WAp0c0taucP/Vjj7//tLVXLC+h7PGfG4hdi5mWpjoRhyF0EzN9aTiBNJDFYo6oaf5IUig+3xmr5vf/3/+d/+n////+b418/////48DOamWHRndlIB626U0R4wcYxrkzA0yiAxEMwzY1bU0ydTc1SFlRrxBmApggoQBIRQ0KLqoCl2iNxZ5Fd11dZQXDa72vtfAhS+Led47qsawzrqDOU//7ssQogCGVo1P1rAAFqL6ntznAAC6q4qmLLV2yC3S2rcnTSR+Upkbgq5lMdj/4QTyPNaYky50Gts1ay7vVMmwyCrMPtK5DfdFxbz/ZVZVQ0XwC7LvP9Lpdcl9m7JH9jL7U1qMu66s3FpbHYzJo1TX6XcpylEjiLu6osbneTKlLZnSjTpNOnqXH/kk/J5qhs4/++Sx+ZfrD//4480DTrXpWylyZ2M/K0xW1pJZWfaBc7FZ2mJT0NP9qGoeicov2pTAvWtAydWySp+IwUBr5AGioAgFAwAAYEAYEIoCBBJEM25mLSmFjUCzwZ7ORi0IGGQ+aQLhsscg1YGMBeY2GRCNDHiCNWF4zyHTHZuMkg4lBp92SmF0odt2huF4MQEAiMYhQ1IWBEYjSBsMaQczOpDSS7MVjIxMLTLYHKxkAkYYbAo8CllBUImEACYMFBhMFoDUV39MEgZQIMB6sd4wuA3mMdgICCQFAIxiDExZc8NpymTNCf9Vpe9NdAenOpcMg0w8ADCIEMCgcWC8FwbYhL7txb1f4KAAqAQwFupJXfMCgswKSTAJHKgklSAkFAOzOPW/sWeyEZ3ZA+7rl8JZSP24DTBwDozkwYLurkUsVEhwYz///6nefh7O3Hn+3KXHVbmMBsicd7+TMNYZY01PJYzVpYejdLEH+jVJcoYlQxq0/8HSmcguZktPS0tWxE+xGDo62KN3pZn/4/jO1+b5///////9///////7l78LFJz8+f//+qfv3FiLg1lYgAAAAAA9zX2g4WmDvQhggIdHfaR3B2cQDAqmMuCwqZmQZ5jYuYyWm3B5iiWevCnTBYPmDV4E3GP/7ssQcAaWBnzldvYAMO6vmCd0meHNN0z6woArQC1DLwIyQhMSRRIZMAFB0oKgAYaWGFlRiYoY6FIAAqaAYmEh5rxiYygNMEEwQOgEGQNSBai5qQKe6wrOWRQFef6XNu6zTpFEYjIWBzKcL0x5HoWCFAB4GQqazSMdLqIzQMhNVVHgkwgEW0hSTAEUU2W9G4FRCL7MumVO1LmDMiZc0J/qSl+PQLAD7RZ/o9FZ2UuqGALmv60l9YrR1L83KbUNT043FeT/arU1q1juXWYrD7ZHljL2Qa7nJPWhEAtvVZ46KIr2Nq6MpiS+lAi+KPrDVyyBQZ/phxrNNc4+zffhl////////vHmP1gUAzDo7TOcHTH8eTQ6RjJAUDXlEDJ8dTOcfzEsODC8NDAEVBZBTF0CTCgUTB8HDLgszAwcjmu7DbYpTDo2zWIVTNdVDWtJjF0fzJgZTLwDTZ0DUXzXAjVmTWkAQlAKMxYQ1xQKvTXjTqBxGJDDQtRMAvGvRphxkVg8PAZEHWhYAgLGSaSoVFgomWpAIQuKjYW7MUILRmGABB8mJQLBqHwqBEgKITrkoJHEDAkRk8BQC6SDyw4QWbusMnsqilwtZLJc7jsRU3hIADq5fpbC901X6ZxKoad6M3pVH32d6XRqXZauS6zHgKDU4WhYLbUvZKkiil/73K/tJY3gVWWITDXOmQWHwsauORypdruQIj0jbAAAN3NiISNE0VD0qNVaLNkrHPMlDM8FUNphCNC1zblE9+6OwZTcH46jPMAAwxJMy9T5IE2dMOOKzY0MAjYC6DFmcBYhqJ0b4smBvRsYgYwlmRAoMETG1s0Y1Mv/7ssQtg6d5gx5u70fMoLQhDe3lOOGTwk0yESNK2JrZKWBoAPHm25mkRGbYGeVpym2pnEUHfnHHZAIkauceOEYgKZoasxL8uaiiAALKS2qjaZK1AKUKD72r5FQRkRjAXiMgjBTFWdLwcEgoqmCvsFAXIcdfoCLDAUyQNE0DAi6rREVl9rFZyiCgMBQWGnaemy2jZ1Hkmn3iU/vlaVSr8KBiUnd6HYa1Mx+s+1x5oFcq1QLxcKHs5A7xe2KKGp67Ykra/iia1GpllZW/0G0cdlL8rqpnwcp/3Bl0o7Ho21uMZ73Kpdute7vVrc1Lu3Ld7xQV/OPtFCaxm3uNHCa70auZgxgzjtmUEPOYEpDhmFm8GdGa4ZNofxg7hdHOmBojSZEsHc2g1VmIvB08obi5GnBZve8eGOG5OoWXDeWg00eC5McLYGfDRppYTAbNUwgQFlnDJVo5WoM+CDVVQzMGGQIyc2MxHiIPMQITFg0xSB1E5nQsIHJImv4xsxB1NgSUZ4yuzCPMwFUpZ1DWAwAaaAaBAxQizSzhAKZxah4GFU1SpMIkDGqlQCp0xp/r68iyyvo8oFA7SizyzoKdaddqu8UcXy0FhIGBgT2VPvL5y3DMt+7Gb3P1ds01rLu6WSOVD1Nll8zGb34x5nUnZCpk228aWUy3mVamprX6y3rWWVr8rXaWLR5nTvWqtLjrHHHHmOOsv3Zx/L////8sv3V6iAAAD8n/0u6PIhEJAwoQX7DFTPOMR0KxBWIdfBCxjkg5AiTFiS7SJqNqUyh6wgKDL4JFqAGSqFSUtFMS0SEkQgEAY4EMgoeo7CgI6Ah3RAR7TEWOCv/7ssQqg9pposOsvNjgAAA0gAAABLGIl1ShyJTCZN4cxASYGmgGmAuUUikypFerGdwd6jKk6jRLcPkT4NkKYgRRl8Q9UM7xjYIF9Y3FfNpkbmv/5NKvKfKun/7s+YzwsiSLMi82aNKLEgRZRZwGIFlmPUkhIELPKNAhZAOjTXiUs7O7Pno0o/Xynzcqi4WROLQXRGpMQU1FMy4xMDCqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7ssQAA8AAAaQAAAAgAAA0gAAABExBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7ssQAA8AAAaQAAAAgAAA0gAAABExBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;