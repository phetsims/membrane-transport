/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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GUaLMSYormjaJGTYREDBakX4pMlK7a9rjrsp6RiCokbR9Xd/JLMXqIptXdZehCEEpVcJP/+1bSZEkkkkcTl1dq0D5yUqHMzEKhhQHM1k0TB5kwxxiuwJNONTZAM+jnoAZM3WWrmelgstaV25k/axhCF5068lHJFysCI6iSuOh2EZ1ssGQmk2qEfLWh2LSjZRMlWeSkTa05S7K0mzNBYTMuv/+3LEzwALsMNPp5hxMZec6PTzDi4YEzdL5q23iK7Z8etL00yzTWkpUMqx91dUs103f4iatCTIUNdCgNNWhQkKSvlmwjmbiFnoiza3uvk912KPituv3Hyu2bpqWrbNKogiUkk25I5NOU06sr43h/PjqhOUF7Ff6c21DLqJgq7bK99ryysOzv87ncqdqfvJdqdQaJct/hJ6/I3iWJfWAzXw6m2DgIYlDhZ4Kj80MRzJ44NQNkyZWzshBN/vYCLcyIkjVowDkoMamyBo/GogmCWG5FGGJiQF4FjNuikCBYoKHkRiAaDSma3WvRBdSNq9EVnXWK8UTkrxPG6jBmkwI70Rm4Q4y0XAbO6rDm6xuOQXCQbFcKR6eAqKA+5uJUYj04ZXqSR4A0HJ4wvPc/rM0qejkPYtBs20XXz1M//7cMTxgApsiTdAvQOy0LRkdYYm1uetR17rM9qEqJLnVahpeJ6rOXgu6u2A9JT8F3VqZeufEkvL4rSz+rYI8Q1JkhKz1NHWa9Wn88zS0zZlh89Om4rMxLrrYI3WYgqC25QFYLPr7v1pTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+3LE/4AHvFEloLxFM8C0VsnNMbiqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;