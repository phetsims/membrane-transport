/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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WfsldR63sLrCEqAFZEnmmAs1eJMhGuLjwFgDguPKlJSCRldoiFv0QHDXyFwCMxhQZQJFv6nTA7XlKFb1ggYREZ0V3r5ac88Oxbq+3ibx2SzTc2CJzIPmgJhIu8yFHSpIHcEWWottAawlpib0npU9XiaEnMi8ZyKRfFfjbOY70ApOP/SMhbLEI6yFsiwTbXq8VdyMsqxZAz2LUM7QRpnTpxWtAj1NLX7bep15BjnbiFqAW9tTjtSxuMUhWE/LI1Wr1rdFDWUijMRv9rzXbdStbtQzLabO3/e8r2v+rq3jO/vCVUcA2I1uXX7Met0uM1ZiHU1d3NUASABvAAABBMOGzcp0gJgwGWCLZGwSpiAyvwxcqLVF5TlwQ2lKDGMyUyEhFcpjtGTCPGgKN0mvIgo4iMNI4GhKHTdDDpjKKCvILCMmWUwl0JTEn+h4mHL0JyKUp3GcqJgK2Kbpa1qFpMatsoYerhaT1Jxx9+mkqC3khpmtKo1rYGYT2UvvtYVvgVUSRSLo8SuW9IX1pqGW1u+pUhWXtWjE2ZAIoYJBID0x+A7dipI3cZF92lxwpqvKxjiNWk6/lnsKirdkOTzu0mi/DXpPFmz0FHFsqm5TOxGHX91a/HKBpc3rmX67BmMRqMs/hujjMvldiIRqevSp9oGm6nLMappVMwy/v/rHHH947/PHsvlUoq63G4EpLdFdpuT+H/////9+1llNPtD1aXZYU0aSTBX9R6ylSrpXCmRG45jqcm1OnKdKhnbU6LaQlUooSYHMxGQxJrSxoPSNMizENeylJclMFmrhONBq7f/7ssQag+JFpPtc/AAIAAA0gAAABJew2DkqjCQyiQHPGX9cpylhkJSDzBmeggZkKrEnqgBb1gSgz/luTIVFKNv7eyyuwy7tqlqOEu5xm6l1SyKPzYUJKAVMFxZIw5Uzk0Uqhp/n+jVrOVO070umX9h2W8ypo1Go1Ls5TDMav1YZf1/ZbWjVLjSwy/t50kvkHmu0DlO9D0adphy7rz7OVD2cpltymwlUuzlMZszUavU0uv40tnVaHZbZ5TQ05TOmvTsqf5/pddlL+v7aqymW2bkqf5/qXVNGqbKrKYzaq//QU4FFf//wKyG/kMyG9BWwU2EEqkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;