/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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0ckxphkTBMGHMvokcywCTzD9GUMAUDIypk3bgfRGDFg0eaZyMODOi1ZBKuIBqbAUEA4cSLAh27jxq8XmrQkM2t+83NprrQdSxufjkFyrT1U09kdyLAus3Zjpxh6RQ2D49RX/GHFRYUpIg139XTr29Q6HYi3s/+wRCUAJOXddpc0gAAXB5hwDmKEeciqJqRKHP6QZKFhiETDwrcYQAUmABcL/+3LE/4AKIG0/TTzI84WoHgH9rfFWp/S0dD8UANGSUpHzRkSlS2n9WuSzjsaK6oUyt8pszshqPMrf5uYrafyiVrf/sl7/KW7VL6Urf0M5QT/ly8rs8S4yBy2vSGtPSkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqIV2//UzuI/LiIsIEPksAA5BDANTLPEUW65rp9eL6kgony+wlNCNfZhy8TUma5d22v0BQCFbeCplSgVEW0NEaCoiWGhCIoKjHajwifVlUlqMj/K3Kf7JLdJIAAeVHFJ1z+3GpdN+Z0tGRibQEmJJAcZSMCJl4QiGOXCiZX0LJo41ZGqZYeaQd1hlGYUmJVv/7cMTzAxMorvJPaQ2BxaugTcYJ4ioa3fxpzSavHmLMWbjohxrPIsmXepEYVyh5iQJZGPqiCZHh+BjYoPmCmlEZWKwhlFLgmRSuQYly3phLOhGRm3OZnDPBnir9lZ0VTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3LE2QBKlLD4Z4RzEgwJAzXveORVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;