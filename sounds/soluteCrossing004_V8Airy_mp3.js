/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,//twxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAOAAASXgASEhISEhISJCQkJCQkJDY2NjY2NjZJSUlJSUlJW1tbW1tbW21tbW1tbW2AgICAgICAkpKSkpKSkpKkpKSkpKSktra2tra2tsnJycnJycnb29vb29vb7e3t7e3t7f////////8AAAA8TEFNRTMuMTAwAc0AAAAAAAAAABRgJAJGQgAAYAAAEl7dtfgxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7cMQAAAAAAaQAAAAgiwAhqoIwBqgQQTluAGOCd8oND6nM+m5HKOD+j/4P/6v/////y7xB//h9kJQbFwbMj2Wy/WyFYjlrxGGxwZkTu037EgNKns4zgUvAcHIfpD+5nNXGwSDyTUvjh32CRy5B0eidic6Kg2YHAKCAQh11K9ixvxUEzA4DTBECRYA6WWv/Er2fzmzHMDzGgdgwOTFMKxIELVJP1rX2N9/zCUFYcDAJBwTmAIGGFwJY5flu/9j/7/mA4HmA4MiMEDCACDB0DzBkExYA8t/reGv/+//f9HALAUYOAQIAITlcIwIAZDu1q7/P/8d6///////1xv5OP5JaNQRqr5tShNqx38s/3vPX/////////8/DEzahcYsalEsyw5UvJG678dkAAAAFJyNud4kZF0pcCwP/+3LEgIAeCXtfuc6CEcQS7H+yYAQTaEu57UUFJmLeBxlglap6BHeAT8CSHGSmemyyIUWivlGzj+FF1taxpxe58iz/G41/f9o2kh8+J2qNIPJYKlguIRkgosiBKCTF8g0qpVOsoWIZuwVYdS0mAUsQo88YJcXV9kYCcbbjjcuTMURAlaVZViEmapmAQFClaIp2nXEVK6fMlJf9bLr8t5d+inBCRmeVsxudyOvd1ZLdlluWYrFUIJIBaOHyiTx1AohpdzkHDSzLno7AJGNa1dC7nDdzU9GPTRiAAAAJKi4yhwBCDyVoQF5gmKBACQWHcLFqZeTAa3E4YyEqYRDYZmJupGaqKEm4kmg0JE5zkqEjHiTOUUduIyCsq1l7JY+4l1sMPKYvXEZaCLyIlpYZAAH4GQyTnIJHPsjRM//7cMRiAAwsrXensEmyihwoEdylqAwJU0iQ+mQnlm8Nk2qMGEacvuyZt2SlOp6gJfD/zYFx5lxkPBgrcwuKhMeSN2qSgjcEYul75VB4i7eKJZMbphSWQyABIiTUbTciJ33eVOuhubTqs+vmWphLdtUcD0s6AAkgioFg8i8q3no3PInByvb4axbWoodxy2M1IsKZnBkPNRrFCPOt9Kv8rRVVvStG3SeMclSgKKeRJSrIeEcwoUeMjRcXqVLQLk216vAAAABVvexDqnepWkozowwExwCmUD8YkBZGIiKsDJeMBC8CuO6RlIC0li7bLlppOtZZWy1+36f+FP9BsRkUpjTD3/kUolsmtRqxSxKrZp84Gs2ERZFL05o9B4qEKg5S7nUSoJdnZOy4t555trlpRqiPvSmYt2msMzb/+3LEcgANYQlv7BhPMmGhKGXMGbDycimbNKY5ERUw2NEhaI3KhUjaxI8lreYQcKyUW17x9eAAAACvGR0AomhAEaMGBsmO5kciSg0CiTfFhNYpEWkZlcQmcMcSBGcQMDxZbNlS8WwteHglN042wLzU4ZMsMzB/06Zh9rTiSGHpRHq+cB0tbO1GcaGkHE0kRAoiBYpJZmCblSOWcGvaMpA+8N012yNLLj5C/aX+/+thv3zY772fZ55ZGHhZqH4TLUvqvZcPqfrGRejmOrTv2SyqgGaItltslyTUDGRleMBKn+fpN3aYCM2GQVq2R+LSS8LuPmdXT/UtHbrmsFIbd1bOwKjDBeaqOqvCSuKjVhbKk7mKwsdlc4zR+7K9RVS1DCMMLH3SkrYLRq7sPBZF72MeSjmmWv61LmnbR//7cMSCgBMdBz8OZM2Bp5pvPPYVbgABExjstt3iLZ18qGvBEICUeoWup8FVaVbRIUIiM2Rm00YKmotThKujcMrq6801hCBfwgp1738ltyNh/laTJbmmRFlzPypEReKDWDltzkq0Fmc5fjqEdN2uOzjWS6qgEaIsl1sl0BDDkPmxXsZdEqSfKpOFtOA0W1lT1pHvY8vl+Z1hjcvNZVNu435Q9Iib52mLbdI5qbRmlm4Uq0O+6v9liFQZCqz9cqyxN3vKhrKzdWX5b7W1srvNM09HRFb0pdrvwX031dCHUgAAEQLcccvuXH2Zgy+YiDd3mXQTJCLPM11hkVdub5MU0Qwhjsu3YIY02FdqipCYzUTe2xjptPR5um7EcpSUuj/Vec2O2qkXpftfSqiNlmNTPdrtGwsxKntVFUz/+3LEkwALxNNh7CRtIassbvzzCqbKooABCcct1t/ZtTJ2IU16QNfgJ505yGVRBxW1FAdEEYA+hcmjsywyipwGCKfSXkHIqu6DJJCHbHaJgqpuxFt4PtJwp6I1wRlTOuumM4OpSHTGjsJVrRjzTm5NW/KUG6/DutuLVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVhWQgEzM3JHHJW8lNhXiblCtDFYigiFxdHhGTpwpZoYXB08Zs/GYOYoXBcg5BBIclGLsIHvCY3HFCalKwtr0qXzfNVkajkWyXjr46MiaJvppPLQJQf8084MmTQuJZUwpkYl8BpYLC2DSVRjO/SRkFtpyNpu6V7WNwkIsA4BAxMB0leUBlIu6GNKHJ1RH+ciejK2Oj3+NwTRVzSKkCkPXIlf/7cMTBAAuU01nsDFFhkhqrPZSNnCkczBYIn1FeC3TN1ALdlwyZXPMS7tgFZGZ6q2zSIm7jNgl6JRlxRV1u7tVnOZDdrakdab0sq5NnZLLK52OLcHdlo4J5kd7TQStUTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqujQCbSbjabmFbBDqNtkSZgEc7MAdozLtydJMoE+OFPx3xGrmlkJxVybuMoLVY3YSniyQFMMoYwIUYymTdkFmoQnNmcGpfCCSg2zY1v9o+XfmVzbPMsTS/edTMqLUmyaCDXtcnW3peKTz/tT1PCogEZokksjcsiKAEp5DBHYKSQUI2C/SRfzHMYupxq9UHtZXyOJotrE7rDj/+3LE4gANeSFp54xTsfiza/TzCqayN7K0omBHHLzsaX16ld9JHLJMW+PK23IO+rhHLA1TFBqtLPZx2YE0h6UQjoFemx8qU17aF5nb62SmtruDNhIPsZrHU3ktdC9ibkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq4AAAEm25PoW2WoiK8qDRa4KhCQBCNm605rosYwEkoYaSFCgYMZGpS1eBcG+V89Maf2ilctl1NA2Eap3Fpi7qWCyR9FEcICQtEx3gxdpsnwfpj8qikarOghRSys7QXPdztyr9VRNNGK+lfJ7mea+ov//r9367OlRGsaoyoCIChVYTBMwprUDmkPgCXvniE0ZBTTvrq82EAEAMUQMOUvTMIqaAJ0saaMlUKJGGw2P/7cMTegA2FG12npHDx16esPPMK3ozEg0sjPWgRWTQPKvpYjWXc2eeOOfDx8fky37sZq2ptxXqUWJIEbgiyB9Y2lh4KBD58vKNOlG2NQl5YwiyRrapq0Cqqnf/P0LaiTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqdiIBSTfdf+mnszghur4YxNlCpjOOXw+8zuvJTBiYEFpJTKO/vKtqr1le3dwR0X8o6H507aX0QYO2ka8k7ZdtIzWW/IszJg+fO/f0elkfJqUpeXYZ3vf18luDcSaQrO1/VdIwXJHJJHHcaJmG3OZocqjUhRqUeIP9dIVU3ULZFDGQQ8kHWU7/+3LE6IARtRM1TeDNAaSaajD0jeZWWqBDMioZjtKTJloR7KAl7lWbmv5fJwljoplqL5c/GY1cHorI1Hd6QS371KV7lKrgj2IDAQsQ9zD5iJp/6//6jV7Gm1Dr0Q2lVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUgAAdj70jgHDA8IAGrWYKEQCGhg9Emm7UcF9ps1DGCAiaeHBiAlgIzEwfMPz8Jf4Ka2At+IgLnWQjS2ysrgr0V80RmSmTpqwSpmLdG2nVHWWu3SVoTC5W8jkwdKGWEbBOKoocRLCdZlpNsZprWXxiQ7CCbrwo3iipDGmSyPbhcTuKs+6vqNR6m1OrlV4xvUqvvc0abKlAbwysxWxL5EhFHiCibfyumRufYt3T7nvUAm87dfv/7cMTVgAwVO0+MGG9xuyuqdPMKNrf8t11kT0gjo9UKJ0AzAfVSqUQJZQBXFYkudc3JurDeILCsW5vsOWZWAjDHJci3JjsK+TEuV2nzmFEjaipFVbGh1Ir9T/s6f/fQTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqABBvlK6UhQcEjBIuEhkIBAYLFhjM5GbVqYRvJ8JUmdUaTNUwOKW6iEADwcBoCCoHBQRAwCVuTmUWjinbBYJR6fuW6gd/GWgIAXHBVgEsCYsPOAKKptj9soEKNAImm187f6MhOOURXTl5+T8sSptuk3WpHSE0sWMVMKwZi1UTBvLLWmtL8roalICbpL/KrcHWx6S58rGWWtYmW3IEx+FewREVuCoCAp7/+3LE64AViRMWrmEvQUKXp7TzDaSV2UIpjTiCbbbjRTlyZHaZJ8BJimFdFhrU6p3TKl1RJeZ8rgwQwYwYVsbQxGFE1CyZmMrxrSs6ZmDKJgqViXZ/q//7HenRfXK2kUxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqIFJJppNtpy/Hx8M2YKHLkHKBWKdUt6NVzEepCYkusxZNPpdELiEahiiIwoTZ+ah0TMOXDE54dyNzCuXyiffX/sZyupStM8rfrQzqyGNKwYUDE9Z34cO+edELglK+tAAty7W+7cjUlUWolzQIORjUa7xrWjWm7P5x6vkxzl//7cMTmABVhewpOJHcBGBFmdBeMtsigSIihxFFtk4pxIY5UdfeTlm6RMSNytkDUlhITDlRSQKgkblM/dqfGb9+8EgVNHuxItFubCWss0CitoFI4SAor7ZH67YVcsi1VTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3LE0IALlUMfp4RVcaggoHRhG0ZVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;