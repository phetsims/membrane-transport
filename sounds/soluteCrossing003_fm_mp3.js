/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7cMRtg8AAAaQAAAAgAAA0gAAABKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+3LEbQPAAAGkAAAAIAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7cMRtg8AAAaQAAAAgAAA0gAAABKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo=';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;