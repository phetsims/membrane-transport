/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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gJ4EJNKi8QBBokIDpvzx18pn/JmVgq7N1FES43rARk2NISy8dEv+Jlrk115uDEpO8UupYIa/GUfZI3R2o3I0PEgQPvMiEZ5MJiYRGEIlLCAViocIj8d1xZE3WRQ0zq8G3eHdb4Nyzp7v+kuZkcvyjGNZTYnpoqjGjAyV2aGQcllmpMYrzi7d86qlDUBu2eF2hTya817DDuERUCiTqPffCUv/+3LE6gAUFTkcLmjNmWMaqTTzCh5QLtSg8pWuodEJZyNNbGgy+HMnlRtiqSCqkgChRJztfHJHwaRyo1rlki23+Tg6EA7GkTp4iGgryKjyGfvunj2//r1P0/pb2sV/pkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqsAABFWG/rarX8a1PGX+jsAJ1EAjyYBxg0DwFFjXpq0JUAJKKYXGMZTUBJoqysiwwFYzUBAjXAS9ulkzUsEBHAzfqqlRjWqAjewMBP/ARP/s3+pNOw6ex//7cMTmABTFjwxNJHkBKo5lJBeYrvVCt/zwriQoCh/0qJgYCFbCr/hRqsNQqzwIVBVL6WYUT8Y6Ed2WVTIBNG2/334LKKkVrUiy7irsVAXr6xn29dISNfyP+r/UBdMXTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+3LEvYAPgYcLLCRteJQAIzwQiXaqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;