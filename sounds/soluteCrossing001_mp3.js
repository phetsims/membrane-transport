/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7cMRtg8AAAaQAAAAgAAA0gAAABKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqTEFNRTMuMTAwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+3LEbQPAAAGkAAAAIAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;