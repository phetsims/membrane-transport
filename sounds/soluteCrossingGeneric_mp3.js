/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3LExAIKMDzcDn+AgXI0YPWTCN5VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7cMRtg8AAAaQAAAAgAAA0gAAABFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3LEbQPAAAGkAAAAIAAANIAAAARVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7cMRtg8AAAaQAAAAgAAA0gAAABFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3LEbQPAAAGkAAAAIAAANIAAAARVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;